// Generated by view binder compiler. Do not edit!
package org.pytorch.demo.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.pytorch.demo.objectdetection.R;

public final class FragmentLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button bLogin;

  @NonNull
  public final Button bSignup;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final EditText etPass;

  @NonNull
  public final ImageView ivLogin;

  private FragmentLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button bLogin,
      @NonNull Button bSignup, @NonNull EditText etEmail, @NonNull EditText etPass,
      @NonNull ImageView ivLogin) {
    this.rootView = rootView;
    this.bLogin = bLogin;
    this.bSignup = bSignup;
    this.etEmail = etEmail;
    this.etPass = etPass;
    this.ivLogin = ivLogin;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.b_login;
      Button bLogin = ViewBindings.findChildViewById(rootView, id);
      if (bLogin == null) {
        break missingId;
      }

      id = R.id.b_signup;
      Button bSignup = ViewBindings.findChildViewById(rootView, id);
      if (bSignup == null) {
        break missingId;
      }

      id = R.id.et_email;
      EditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.et_pass;
      EditText etPass = ViewBindings.findChildViewById(rootView, id);
      if (etPass == null) {
        break missingId;
      }

      id = R.id.iv_login;
      ImageView ivLogin = ViewBindings.findChildViewById(rootView, id);
      if (ivLogin == null) {
        break missingId;
      }

      return new FragmentLoginBinding((ConstraintLayout) rootView, bLogin, bSignup, etEmail, etPass,
          ivLogin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
