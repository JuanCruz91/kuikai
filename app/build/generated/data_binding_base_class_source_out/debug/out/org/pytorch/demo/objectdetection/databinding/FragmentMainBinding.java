// Generated by view binder compiler. Do not edit!
package org.pytorch.demo.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.pytorch.demo.objectdetection.R;
import org.pytorch.demo.objectdetection.ResultView;

public final class FragmentMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button detectButton;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final Button liveButton;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ResultView resultView;

  @NonNull
  public final Button selectButton;

  @NonNull
  public final Button testButton;

  private FragmentMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button detectButton,
      @NonNull ImageView imageView, @NonNull Button liveButton, @NonNull ProgressBar progressBar,
      @NonNull ResultView resultView, @NonNull Button selectButton, @NonNull Button testButton) {
    this.rootView = rootView;
    this.detectButton = detectButton;
    this.imageView = imageView;
    this.liveButton = liveButton;
    this.progressBar = progressBar;
    this.resultView = resultView;
    this.selectButton = selectButton;
    this.testButton = testButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detectButton;
      Button detectButton = ViewBindings.findChildViewById(rootView, id);
      if (detectButton == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.liveButton;
      Button liveButton = ViewBindings.findChildViewById(rootView, id);
      if (liveButton == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.resultView;
      ResultView resultView = ViewBindings.findChildViewById(rootView, id);
      if (resultView == null) {
        break missingId;
      }

      id = R.id.selectButton;
      Button selectButton = ViewBindings.findChildViewById(rootView, id);
      if (selectButton == null) {
        break missingId;
      }

      id = R.id.testButton;
      Button testButton = ViewBindings.findChildViewById(rootView, id);
      if (testButton == null) {
        break missingId;
      }

      return new FragmentMainBinding((ConstraintLayout) rootView, detectButton, imageView,
          liveButton, progressBar, resultView, selectButton, testButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
